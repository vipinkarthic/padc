cmake_minimum_required(VERSION 3.15)
project(terrain-gen VERSION 0.1 LANGUAGES CXX)

option(BUILD_TESTS "Build unit tests" ON)
option(ENABLE_OPENMP "Link OpenMP if available" ON)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Release CACHE STRING "Build type" FORCE)
endif()

if(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  add_compile_options(-O3 -march=native)
elseif(MSVC)
  add_compile_options(/O2)
endif()

set(DEPS_DIR ${CMAKE_SOURCE_DIR}/deps)

include_directories(${DEPS_DIR} ${CMAKE_SOURCE_DIR}/src)

file(GLOB_RECURSE SRC_FILES
  ${CMAKE_SOURCE_DIR}/src/*.cpp
  ${CMAKE_SOURCE_DIR}/src/*.c
  ${CMAKE_SOURCE_DIR}/src/*.h
  ${CMAKE_SOURCE_DIR}/src/*.hpp
)

list(LENGTH SRC_FILES SRC_COUNT)
message(STATUS "Found ${SRC_COUNT} source files")

add_executable(terrain-gen ${SRC_FILES})
target_include_directories(terrain-gen PUBLIC ${DEPS_DIR} ${CMAKE_SOURCE_DIR}/src ${CMAKE_SOURCE_DIR}/src/biome ${CMAKE_SOURCE_DIR}/src/core ${CMAKE_SOURCE_DIR}/src/erosion ${CMAKE_SOURCE_DIR}/src/noise ${CMAKE_SOURCE_DIR}/src/utils ${CMAKE_SOURCE_DIR}/src/world ${CMAKE_SOURCE_DIR}/src/river ${CMAKE_SOURCE_DIR}/src/image ${CMAKE_SOURCE_DIR}/src/objects) 

if(ENABLE_OPENMP)
  find_package(OpenMP)
  if(OpenMP_CXX_FOUND)
    message(STATUS "OpenMP found, enabling")
    target_link_libraries(terrain-gen PUBLIC OpenMP::OpenMP_CXX)
  else()
    message(STATUS "OpenMP not found â€” continuing without it")
  endif()
endif()


set_target_properties(terrain-gen PROPERTIES
  RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin
)

install(TARGETS terrain-gen
  RUNTIME DESTINATION bin
)

message(STATUS "Project: ${PROJECT_NAME} v${PROJECT_VERSION}")
message(STATUS "Build type: ${CMAKE_BUILD_TYPE}")
message(STATUS "Source dir: ${CMAKE_SOURCE_DIR}")
message(STATUS "Binary dir: ${CMAKE_BINARY_DIR}")
